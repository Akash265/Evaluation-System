[{"question": "What is the purpose of routing in Fast API?", "A": "To send requests to the correct endpoint", "B": "To handle authentication for API requests", "C": "To optimize the speed of API calls", "D": "To store data in a database", "answer": "A"}, {"question": "Which of the following is the correct way to define a route in Fast API using Python functions and decorators?", "A": "def route('/users/{user_id}'):", "B": "@app.get('/users/{user_id}')", "C": "@app.route('/users/{user_id}')", "D": "def get('/users/{user_id}'):", "answer": "B"}, {"question": "Which of the following is NOT a valid way to validate a path parameter in Fast API?", "A": "Using a decorator such as @path()", "B": "Using the parameter type declaration in the function's parameters", "C": "Using a regular expression to check the parameter's format", "D": "Using a conditional statement to check the parameter's value", "answer": "D"}, {"question": "Which of the following is NOT a method for validating query parameters in Fast API?", "A": "Using the built-in Query parameter type", "B": "Creating a custom validation function and passing it as a parameter to the Query constructor", "C": "Using the validate_query_params decorator", "D": "Passing the validation function directly to the Query constructor", "answer": "C"}]